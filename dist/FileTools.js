var FileTools;(()=>{"use strict";var e={2843:(e,t,r)=>{function o(e){return"string"!=typeof e||!e||""===e}r.d(t,{isNullOrEmpty:()=>o})}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var l=t[o]={exports:{}};return e[o](l,l.exports,r),l.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{r.r(o),r.d(o,{base64ToBlob:()=>t,downloadFileFromBlob:()=>n,getFileExtension:()=>i,removeFilePath:()=>l});var e=r(2843);async function t(e,t,r=1024,o=(e=>{console.log(e)})){const n=new Array,l=e.length;for(let t=0;t<l;t+=r){const i=e.slice(t,t+r),a=new Array(i.length);for(let e=0;e<i.length;e++)a[e]=i.charCodeAt(e);n.push(new Uint8Array(a)),await o(t/l*100)}return new Blob(n,{type:t})}function n(e,t){let r=URL.createObjectURL(e);if(r){let e=document.createElement("a");e.href=r,e.download=t,e.click(),e.remove()}}function l(e){const t=/(?:.*[\\/])([^\\/]+)$/.exec(e);return t&&t.length>1?t[1]:e}function i(t){if((0,e.isNullOrEmpty)(t))return"";const r=t.split(".").pop();if(r&&r!==t)return r;const o=t.split("/").pop();return o&&o!==t?o:""}})(),FileTools=o})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,